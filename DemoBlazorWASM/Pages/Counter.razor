@page "/counter"
@using DemoBlazorWASM.Interop
@inject IJSRuntime jsRuntime

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="EseguiJavaScript">Esegui Codice JavaScript</button>
<button class="btn btn-primary" @onclick="ApriModale">Apri Modale</button>


@somma

<hr/>
<MyModal Id="@myId"></MyModal>




@code {
    private int currentCount = 0;
    private int somma = 0;
    private MioInteropJavaScript? mioInteropJavaScript;
    private string myId = "myId";

    protected override async Task OnInitializedAsync()
    {
        mioInteropJavaScript = new(jsRuntime);
        await jsRuntime.InvokeVoidAsync("miaFunzioneSpeciale", 3,4);
        await mioInteropJavaScript.SalutaDaJavaScript("Mario");
    }

    private async Task ApriModale() { 
        await jsRuntime.InvokeVoidAsync("showModal", myId);
    }


    private void IncrementCount()
    {
        currentCount++;
    }

    private async Task EseguiJavaScript()
    {
        if (mioInteropJavaScript == null)
        {
            mioInteropJavaScript = new(jsRuntime);
        }
        somma = await mioInteropJavaScript.SommaDaJavaScript(10, 20);
        await mioInteropJavaScript.MiaMoltiplicazione(10,20);
    }

    [JSInvokable]
    public static async Task<int> CalcolaSommaSpeciale(int a, int b) {
        await Task.Delay(2000);
        return (a + b + 100);
    }

}
